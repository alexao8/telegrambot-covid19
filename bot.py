import telebot,os,datetime,csv,os.path,requests
from telebot import types
bot = telebot.TeleBot("token")

def extract_data(country):
    dia_actual = datetime.datetime.now();
    day = str(int(dia_actual.strftime("%d")) - 1)
    month = dia_actual.strftime("%m")
    year = "20" + dia_actual.strftime("%y")
    web_link = "https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_daily_reports/"
    csv_archive = month + '-' + day + '-' + year +".csv"
    request = requests.get(web_link + csv_archive)
    if request.status_code == 200:
        if  not os.path.exists(csv_archive):
            os.system("wget " + web_link + month + '-' + day + '-' + year +".csv")
    else:
         csv_archive = month + '-' + str(int(day)-1) + '-' + year +".csv"
    with open(csv_archive,'r') as file:
        reader = csv.reader(file)
        dades = [0,0,0]
        for row in reader:
            if row[1] == country:
                dades[0] += int(row[3])
                dades[1] += int(row[4])
                dades[2] += int(row[5])
    return dades

def imprimir_info(dades,id):
    bot.send_message(id,"NÃºmero de infectados: " + str(dades[0]) + "\nNÃºmero de muertos: " + str(dades[1]) + "\nNÃºmero de recuperados: "+ str(dades[2]) )


@bot.message_handler(commands=['start'])
def send_welcome(message):
    bot.reply_to(message, "Bienvenido al bot de telegram que comparte informaciÃ³n en tiempo real sobre el Covid-19. \n Para recibir informaciÃ³n sobre los distintos paÃ­ses solo tienes que escribir el nombre (en inglÃ©s) o pulsar su bandera si aparece. \n Si quieres mÃ¡s informaciÃ³n escribe /help")


@bot.message_handler(commands=['help'])
def send_welcome(message):
    bot.reply_to(message,"/help Para mÃ¡s informaciÃ³n. \n/start Para reiniciar. \n los nombres de los paÃ­ses tienen que estar en inglÃ©s \n Si el paÃ­s de tu interÃ©s no es alguno de los predeterminados en los botones, puedes buscarlo por teclado normal")


def handle_messages(messages):
    x = True
    for message in messages:
        if (x or (message.text != "/start" and message.text != "/help")):
            markup = types.ReplyKeyboardMarkup()
            itemes = types.KeyboardButton('ğŸ‡ªğŸ‡¸')
            itemit = types.KeyboardButton('ğŸ‡®ğŸ‡¹')
            itemgb = types.KeyboardButton('ğŸ‡¬ğŸ‡§')
            itemfr = types.KeyboardButton('ğŸ‡«ğŸ‡·')
            itemde = types.KeyboardButton('ğŸ‡©ğŸ‡ª')
            markup.row(itemes, itemit, itemgb)
            markup.row(itemde, itemfr)
            print(str(message.chat.id) + ' ' + str(message.chat.username))
            if message.text == 'ğŸ‡ªğŸ‡¸':
                d = extract_data('Spain')
                imprimir_info(d,message.chat.id)
            elif message.text == 'ğŸ‡®ğŸ‡¹':
                d = extract_data('Italy')
                imprimir_info(d,message.chat.id)
            elif message.text == 'ğŸ‡¬ğŸ‡§':
                d = extract_data('United Kingdom')
                imprimir_info(d,message.chat.id)
            elif message.text == 'ğŸ‡«ğŸ‡·':
                d = extract_data('France')
                imprimir_info(d,message.chat.id)
            elif message.text == 'ğŸ‡©ğŸ‡ª':
                d = extract_data('Germany')
                imprimir_info(d,message.chat.id)
            elif message.text != "/start" and message.text != "/help":
                d = extract_data(message.text)
                imprimir_info(d,message.chat.id)
            x = False
            bot.send_message(message.chat.id, "Sobre que paÃ­s desea obtener informaciÃ³n: ", reply_markup=markup)

bot.set_update_listener(handle_messages)
bot.polling()
